#version 330 core
layout(location = 0) in vec3 aPos; // the position variable has attribute position 0
layout(location = 1) in vec3 aColor;// the color at attribute 1
uniform float offset;
out vec3 ourColor; //Out put color for fragment shader

void main()
{
	gl_Position = vec4(aPos.x + offset,-aPos.y,aPos.z, 1.0); // see how we directly give a vec3 to vec4's constructor
	ourColor = gl_Position.xyz;
}
//1.4 Shaders upsidedown. uniform offset move, position to color
//Why Left bottom color black
/*Think about this for a second: the output of our fragment's color is equal to the (interpolated) coordinate of 
the triangle. What is the coordinate of the bottom-left point of our triangle? This is (-0.5f, -0.5f, 0.0f). Since the
xy values are negative they are clamped to a value of 0.0f. This happens all the way to the center sides of the 
triangle since from that point on the values will be interpolated positively again. Values of 0.0f are of course black
and that explains the black side of the triangle.
*/