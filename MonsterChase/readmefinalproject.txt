#pragma once
About the game:
Used all codes developed in this semester and last semester. 
Use W and S to control left paddle up and down key to control right side paddle.
Game automatically end when either player lost.
The background is the first image generated by my raytracer.
Interesting Implementation:
1. Tranfromcompoennt, Children Object could fllow parent Ojbect's movements  check TransformCompoenent.h for implementations
2. 3d Collision, Collision Point and Angular movement. Still have some problems,and better presented under Assignement2.09 PhysicsComponent PhysicManager CollisionComponent CollisionManager
3. Game, Engine Speration. All the Gameplay is accomplished using interface and message system. Check Files under Interface filter.
4. Others Raytracer, message system, Rendering PipeLine and so on.
Things to improved:
1. Smartpionters were not used, I am refactring the archtecture of my game engine using smart pointer. 
2. SSE based SIMD were not used, The Fixed Sized Allocator do not support 128 bit Vector3 
   and store it in general space could be expensive.
3. None SSE based SIMD, I am trying to implement a jobsystem following the code samples you gave us. 
4. I plan to write a simple animatin system.
Most proud of:
I implemented a game engin by myself, and it works properly. Eventhough, working with it could be a bit tricky
and its implementation leads to wired problems that are hard to debug, I am happy that I decided to use the code I 
wrote last semester.